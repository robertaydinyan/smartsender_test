# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    app.log_file_path: '%kernel.project_dir%/var/log/messages.log'
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Service\MessageService:
        arguments:
            $logFilePath: '%app.log_file_path%'

    App\Command\SendMessageCommand:
        tags:
            - { name: 'console.command', command: 'app:send-message' }
        arguments:
            $messageService: '@App\Service\MessageService'
            $entityManager: '@doctrine.orm.entity_manager'
#
#    App\Event\CustomerRegisteredEvent:
#        tags:
#            - { name: 'kernel.event' }
#    App\EventListener\SendWelcomeMessageListener:
#        arguments:
#            $messageSender: '@App\Service\MessageService'
#        tags:
#            - { name: 'kernel.event_subscriber', event: 'App\Event\CustomerRegisteredEvent', method: 'onCustomerRegistered' }

    App\EventListener\SendWelcomeMessageListener:
        tags:
            - { name: kernel.event_listener, event: 'App\Event\CustomerRegisteredEvent' }